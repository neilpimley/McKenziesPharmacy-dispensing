@using Microsoft.AspNetCore.Http
@using System.Security.Principal
@using Pharmacy.Models
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

		<div class="navbar navbar-inverse navbar-fixed-top bs-docs-nav  no-print" role="banner">
    <div class="container">
        <!-- Menu button for smallar screens -->
        <div class="navbar-header">
            <button class="navbar-toggle" type="button" data-toggle="collapse" data-target=".bs-navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="@Url.Action("Index", "Orders")" class="navbar-brand" rel="home">
                <img src="~/images/cross.png" class="pull-left" style="height: 20px; margin-right:10px"/>McKenzies Pharmacy
            </a>
        </div>
        <!-- Site name for smallar screens -->
        @if (User.Identity.IsAuthenticated)
        {
                <!-- Navigation starts -->
            <nav class="collapse navbar-collapse bs-navbar-collapse" role="navigation">
                <!-- Links -->
                <ul class="nav navbar-nav navbar-right">
                    <li class="dropdown">
                        <a data-toggle="dropdown" class="dropdown-toggle" href="#">
                            <i class="glyphicon glyphicon-user"></i> @User.Identity.Name <b class="caret"></b>
                        </a>
                        <!-- Dropdown menu -->
                        <ul class="dropdown-menu">
                            <li><a href="@Url.Action("SignOut", "Account")"><i class="fa fa-power-off"></i> Logout</a></li>
                        </ul>
                    </li>

                </ul>


                <!-- Notifications -->
                <ul class="nav navbar-nav navbar-right">
                    <!-- Comment button with number of latest comments count -->
                    <li class="dropdown dropdown-big">
                        <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                            <i class="fa fa-comments"></i> Scripts requested<span class="badge badge-warning script-requested"></span>
                        </a>
                        <ul class="dropdown-menu script-requested-list"></ul>
                    </li>
                    <li class="dropdown dropdown-big">
                        <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                            <i class="fa fa-comments"></i> Ordered directly<span class="badge badge script-ordered"></span>
                        </a>
                        <ul class="dropdown-menu script-ordered-list"></ul>
                    </li>
                    <!-- Members button with number of latest members count -->
                    <li class="dropdown dropdown-big">
                        <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                            <i class="fa fa-user"></i> Collected <span class="badge badge-success collected"></span>
                        </a>
                        <ul class="dropdown-menu collected-list"></ul>
                    </li>
                    <!-- Members button with number of latest members count -->
                    <li class="dropdown dropdown-big">
                        <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                            <i class="fa fa-user"></i> Not Collected <span class="badge badge-info not-collected"></span>
                        </a>
                        <ul class="dropdown-menu not-collected-list"></ul>
                    </li>
                    <!-- Members button with number of latest members count -->
                    <li class="dropdown dropdown-big">
                        <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                            <i class="fa fa-user"></i> Problem Scripts <span class="badge badge-important missing-items"></span>
                        </a>
                        <ul class="dropdown-menu missing-items-list"></ul>
                    </li>
                </ul>
            </nav>
        }
    </div>
</div>

<!-- Main content starts -->
<div class="content">
    <!-- Sidebar -->
    <div class="sidebar no-print">
        <div class="sidebar-dropdown"><a href="#">Navigation</a></div>
        <div class="sidebar-inner">
            <div class="sidebar-widget">
                <form></form>
            </div>
            <!--- Sidebar navigation -->
            <!-- If the main navigation has sub navigation, then add the class "has_submenu" to "li" of main navigation. -->
            @{
                var controller = this.ViewContext.RouteData.Values["controller"].ToString();
            }
            <ul class="navi">
                <!-- Use the class nred, ngreen, nblue, nlightblue, nviolet or norange to add background color. You need to use this in <li> tag. -->

                <li class="has_submenu nred @(controller == "Orders" ? "current open" : "" )">
                    <a href="#">
                        <!-- Menu name with icon -->
                        <i class="fa fa-th"></i> Orders
                        <!-- Icon for dropdown -->
                        <span class="pull-right"><i class="fa fa-angle-right"></i></span>
                    </a>
                    <ul>
                        <li>@Html.ActionLink("Print Orders", "Collections", "Orders")</li>
                        <li>@Html.ActionLink("Ordered directly", "Index", "Orders",  new { status = 4 }, null)</li>
                        <li>@Html.ActionLink("Collected", "Index", "Orders", new { status = 5 }, null)</li>
                        <li>@Html.ActionLink("Not Collected", "Index", "Orders", new { status = 5 }, null)</li>
                        <li>@Html.ActionLink("Problem Scripts", "Index", "Orders", new { status = 5 }, null)</li>
                        <li>@Html.ActionLink("Add RX Collection", "AddScriptToCollect", "Orders")</li>
                    </ul>
                </li>

                <li class="nlightblue @(controller == "AdminCustomer" ? "current" : "" )"><a href="@Url.Action("Index","AdminCustomer")"><i class="fa fa-bar-chart-o"></i> Customers</a></li>

                <!-- Menu with sub menu -->
                <li class="has_submenu norange @((controller == "Doctor" || controller == "Practice" || controller == "Shop" || controller == "Drug") ? "current open" : "" )">
                    <a href="@Url.Action("Index","Doctor")">
                        <!-- Menu name with icon -->
                        <i class="fa fa-th"></i> Application Data
                        <!-- Icon for dropdown -->
                        <span class="pull-right"><i class="fa fa-angle-right"></i></span>
                    </a>
                    <ul>
                        <li>@Html.ActionLink("Doctors", "Index", "Doctor")</li>
                        <li>@Html.ActionLink("Practices", "Index", "Practice")</li>
                        <li>@Html.ActionLink("Shops", "Index", "Shop")</li>
                        <li>@Html.ActionLink("Drugs", "Index", "Drug")</li>
                    </ul>
                </li>


            </ul>
            <!--/ Sidebar navigation -->

        </div>
    </div>
    <!-- Sidebar ends -->
    <!-- Main bar -->
    <div class="mainbar">
        <!-- Page heading -->
        <div class="page-head no-print">
            <!-- Page heading -->
            <h2 class="pull-left">
                @ViewBag.Title
            <!-- page meta -->
            <span class="page-meta">@ViewBag.ByLine</span>
        </h2>
        <!-- Breadcrumb -->
        <div class="bread-crumb pull-right">
            <a href="index.html"><i class="fa fa-home"></i> Home</a>
            <!-- Divider -->
            <span class="divider">/</span>
            <a href="#" class="bread-current">Dashboard</a>
        </div>
        <div class="clearfix"></div>
    </div><!--/ Page heading ends -->
    <!-- Matter -->
    <div class="matter">
        <div class="container-fluid">
            <div class="row-fluid">

                <!-- Content -->
                @RenderBody()
            </div>
        </div>
    </div><!--/ Matter ends -->
</div><!--/ Mainbar ends -->
<div class="clearfix"></div>
</div><!--/ Content ends -->

@section InternalSiteJavascript {

    <script type="text/javascript">

            $(document).ready(function () {

                var ordersToPrint = [];

                var hideEmptyTables = function () {
                    $(".script-tables").each(function () {
                        if( $(this).children("tbody").children("tr:visible").length == 0 ) {
                            $(this).hide();
                        }
                    });
                }

                var hidePrintedScripts = function () {
                    // hide all the rows that have been collected
                    $(".script-tables tr[data-printed='true']").hide();

                    hideEmptyTables();


                }

                var MakeDropdown = function(selector, list, action, classname) {
                    $.each(list, function (script) {
                        $(selector).append(
                            $("<li>").append(
                                $("<a>").attr("href","#").html(this.name).append(
                                    $("<span>").addClass("label pull-right " + classname).html(this.items)
                                ).append(
                                    $("<span>").addClass("pull-right").html("items&nbsp;")
                                )
                                .after( $("<div>").addClass("clearfix") )
                                .after( $("<hr />") )
                            )
                        );
                    });
                    if (list.length > 0 )
                        $(selector).append( $("<li>").append($("<div>").addClass("drop-foot").append($("<a>").attr("href",action).html("View All") )));
                }

                var GetOrderTotals = function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetOrderTotals", "Orders")",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            $(".script-requested").html( response.ScriptRequested.length );
                            MakeDropdown(".script-requested-list", response.ScriptRequested, "@Url.Action("Collections", "Orders")", "label-warning");

                            $(".script-ordered").html( response.ScriptOrdered.length );
                            MakeDropdown(".script-ordered-list", response.ScriptOrdered, "@Url.Action("Index", "Orders", new { status = 4 })", "label-default");

                            $(".collected").html( response.Collected.length );
                            MakeDropdown(".collected-list", response.Collected, "@Url.Action("Index", "Orders", new { status = 5 })", "label-success");

                            $(".not-collected").html( response.NotCollected.length );
                            MakeDropdown(".not-collected-list", response.NotCollected, "@Url.Action("Index", "Orders", new { status = 6 })", "label-info");

                            $(".missing-items").html(response.MissingItems.length);
                            MakeDropdown(".missing-items-list", response.MissingItems, "@Url.Action("Index", "Orders", new { status = 99 })", "label-important");

                        },
                        error: function (response) {
                            $(".script-requested").html("#");
                            $(".script-ordered").html("#");
                            $(".collected").html("#");
                            $(".not-collected").html("#");
                            $(".missing-items").html("#");
                        }
                    });
                }

                var processOrder = function(postData) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Process", "Orders")",
                        data: JSON.stringify(postData),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        traditional: true,
                        success: function (response) {
                            if (response.status == 1) {
                                return true;
                            } else {
                                alert(response.msg);
                                return false;
                            }
                        },
                        error: function (response) {
                            alert("Unknown error!");
                            return false;
                        }
                    });
                }


               var addNote = function(id, note) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddNote", "Orders")",
                        data: '{ orderId : "'+ id +'", noteText : "'+ note +'" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        traditional: true,
                        success: function (response) {
                            if (response.status == 1) {
                                return true;
                            } else {
                                alert(response.msg);
                                return false;
                            }
                        },
                        error: function (response) {
                            alert("Unknown error!");
                            return false;
                        }
                    });
                }

                $(".select-all").click(function (e) {
                    e.preventDefault();
                    var practiceid = $(this).attr("data-practiceid");
                    $("input[data-practiceid='" + practiceid + "']").attr("checked", "checked");
                    $(".script-tables tbody tr[data-practiceid='" + practiceid + "']").removeClass("no-print").addClass("break-after");;
                    $("#btnPrint").removeAttr("disabled");
                });

                $(".print-checkbox").click(function (e) {
                    // remove class from table row when checkbox is checked
                    var orderid = $(this).attr("data-orderid");
                    if ($(this).is(':checked')) {
                        $(".script-tables tbody tr[data-orderid='" + orderid + "']").removeClass("no-print");
                        $(".script-tables thead tr[data-orderid='" + orderid + "']").removeClass("no-print");
                    } else {
                        $(".script-tables tbody tr[data-orderid='" + orderid + "']").addClass("no-print");
                    }

                    //hide the whole table if there are no rows to print
                    $(".script-tables:visible").each(function() {
                        if ( $(this).children("tbody").children("tr:not(.no-print)").length > 0) {
                            $(this).removeClass("no-print");
                            $(this).children("thead").children("tr").removeClass("no-print");
                            $(this).addClass("break-after");
                        } else {
                            $(this).addClass("no-print");
                            $(this).children("thead").children("tr").addClass("no-print");
                            $(this).removeClass("break-after");
                        }
                    });



                    // dissble the print button if no rows are selected
                    if ( $(".print-checkbox:visible:checked").length > 0 ) {
                        $("#btnPrint").removeAttr("disabled");

                    } else {
                        $("#btnPrint").prop("disabled",true);
                    }

                });

                $("#btnPrint").click(function (e) {

                    $(".print-checkbox").each(function(){
                        var orderid = $(this).attr("data-orderid");
                        if ( $(this).is(':checked') ) {
                            ordersToPrint.push(orderid);
                            $("#frm-print").append( $("<input>").attr({ 'type' : 'hidden', 'name' : 'ordersToPrint' }).val(orderid)  );
                        }
                    });

                    // remove trailing page break
                    //$(".script-tables:visible:not(.no-print)").last().removeClass("break-after");

                    var postData = new Object();
                    postData.ids = ordersToPrint;
                    postData.status = 4;
                    /*
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Process", "Orders")",
                        data: JSON.stringify(postData),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.status == 1) {
                                //window.print();
                                window.location.reload();
                            } else {
                                alert(response.msg);
                            }
                        },
                        error: function (response) {
                            alert("Unknown error!");
                        }
                    });*/
                });

                $(".orderline-checkbox").click(function() {
                    // get the order id of the check box
                    var orderid = $(this).data("orderid");
                    // if any of the items on the script are ticked enable the button
                    var numChecked = $(".orderline-checkbox[data-orderid='"+orderid+"']:checked").length;
                    if (numChecked > 0) {
                        $("button[data-orderid='"+orderid+"']").removeAttr("disabled");
                    } else {
                        $("button[data-orderid='"+orderid+"']").attr("disabled","disabled");
                    }
                });





                var orderid;
                $("#ProcessModal .btn-default").click(function() {

                });

                $("#ProcessModal .btn-primary").click(function() {

                    addNote(orderid, $("#noteText").val() );

                    var postData = new Object();
                    postData.ids = [orderid];
                    postData.status = 99;

                    if (processOrder(postData)) {
                        $(".table tbody tr[data-orderid='"+orderid+"']").remove();
                    }

                    $('#noteText').val("");
                    $("#ProcessModal").modal('hide');
                });


                $(".process-order-button").click(function() {
                    orderid = $(this).data("orderid");
                    var numChecked = $(".orderline-checkbox[data-orderid='"+orderid+"']:checked").length;
                    var numTotal = $(".orderline-checkbox[data-orderid='"+orderid+"']").length;

                    if (numChecked < numTotal) {
                        var missingItemsString = "";
                        var missingItems = $(".orderline-checkbox[data-orderid='"+orderid+"']:not(:checked)");
                        $.each(missingItems, function (item) {
                            missingItemsString += $(this).data("drug") + "\n";
                        });

                        $('#ProcessModal').modal('show');
                        $('#noteText').focus();
                        $('#noteText').val("The follow items are missing:\n" + missingItemsString + "\nBecause:");


                    } else {
                        var postData = new Object();
                        postData.ids = [orderid];
                        postData.status = 8;
                        if (processOrder(postData)) {
                            $(".table tr[data-orderid='"+orderid+"']").remove();
                        }
                    }

                });

                $(".delete-order-button").click(function() {
                    var orderid = $(this).data("orderid");
                    var postData = new Object();
                    postData.ids = [orderid];
                    postData.status = 9;
                    if (processOrder(postData)) {
                        $(".table tbody tr[data-orderid='"+orderid+"']").remove();
                    }
                });

                $(".recollect-order-button").click(function() {
                    var orderid = $(this).data("orderid");
                    var postData = new Object();
                    postData.ids = [orderid];
                    postData.status = 4;
                    if (processOrder(postData)) {
                        $(".table tbody tr[data-orderid='"+orderid+"']").remove();
                    }
                });

                /* Bootstrap Switch */
	    		$(".make-switch input").bootstrapSwitch();

                $('input[name="printed-scripts"]').on('switch-change', function(event, state) {
                    if ( $(this).is(":checked") ) {
                        $("#tbl-collect-scripts tr").show();
                    } else {
                        hidePrintedScripts();
                    }
                });


                hidePrintedScripts();

                @if (User.Identity.IsAuthenticated)
               {
                    @Html.Raw("GetOrderTotals();");
               }


                @RenderSection("PageSpecificJavascript", false)


            });
    </script>

}